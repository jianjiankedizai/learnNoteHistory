是时候理解一下https了
作为前端开发人员，我们平时很少会关注到数据传输的细节，然而随着开发的深入以及项目的不断需要，
前端人员对数据传输的细节以及安全性也是需要了解一些的，随着越来越多的网站全面使用（百度，谷歌，github等）https，
越发让人觉得往后发展的趋势，HTTPS简单讲是HTTP的安全版。是在HTTP基础上加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL，
本文仅仅介绍安全传输SSL握手协议（SSL Handshake Protocol）的原理而不去深究具体实现的细节，现将本人感悟总结如下：

1，几个概念

	a，非对称密钥是什么：

	非对称加密算法需要两个密钥：公开密钥（publickey）和私有密钥（privatekey）。公开密钥与私有密钥是一对，如果用公开密钥对数据进行加密，
	只有用对应的私有密钥才能解密；如果用私有密钥对数据进行加密，那么只有用对应的公开密钥才能解密。因为加密和解密使用的是两个不同的密钥，
	所以这种算法叫作非对称加密算法。

	b，对称密钥是什么：

	对称密钥加密又叫专用密钥加密，即发送和接收数据的双方必使用相同的密钥对明文进行加密和解密运算。

	c，数字签名：
	
	私钥加密的过程即数字签名

	d，数字证书：

	一个用于互联网通讯中认证身份的工具，由权威机构――CA机构（Certificate Authority）发行。其作用类似于司机的驾驶执照和公民身份证。

2，服务端有一套非对称秘钥，客户端也有一套非对称秘钥，服务端保存了客户端的公钥，客户端保存了服务端的公钥，
服务端和客户端共用一套对称密钥，认证流程如下：

	a，客户端用对称密钥加密数据包A得到加密后的数据包（标记为B）

	b，客户端用客户端私钥加密对称密钥M得到加密后的对称密钥N

	c，将数据包B与密钥N共同发送到服务端

	d，服务端用客户端公钥对密钥N进行解密

	e，如果不能解密，则响应失败

	f，如果能够解密，则用解密后的对称密钥对数据包B进行解密

需要注意的是：

	a，公钥言外之意是公开的密钥是共享的公开的，私钥言外之意就是私有的由所有者私有不能公开的

	b，客户端用同时加密了数据和对称密钥，只不过数据用的是对称密钥加密，而对称密钥本身是用的自己的的私钥加密

	c，流程中所提到的非对称秘钥实际上由数字证书所包含，而数字证书由于具有权威性，难以伪造从而防止伪造客户端
	
	或者服务端

	d，用公开密钥加密技术（通常为RSA）验证彼此身份（有时服务器不需要验证客户端身份），并协商通讯时所用的对称密钥

	e，公钥加密相对复杂，速度慢，用来完成安全性要求较高的身份认证、密钥协商等事务；对称密钥加密技术相对简单，速度快，用来加密数据量大的传输内容。




